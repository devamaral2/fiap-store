version: "3.8"

services:
  frontend:
    image: "frontend:0.0.1"
    build:
      context: apps/frontend/
    container_name: frontend
    restart: always
    volumes:
      - .:/app/next-app
    ports:
      - "3000:3000"

  postgres-auth:
    container_name: postgres-auth
    image: postgres:16.3-alpine3.20

    environment:
      POSTGRES_DB: clients_db
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "3Mu9o82cGm0CoejxSEE0INVZhHmWibCS"
      PGDATA: "/data/postgres"
      PGPORT: 5432

    volumes:
      - postgres1_data:/var/lib/postgresql/data

    ports:
      - "5432:5432"
    restart: unless-stopped

    networks:
      - app-network

  auth-ms:
    image: "auth-ms:0.0.1"
    build:
      context: apps/msauth/
    container_name: auth_ms

    ports:
      - "8001:8001"

    networks:
      - app-network

    environment:
      WAIT_HOSTS: postgres-auth:5432
      DB_URI_AUTH: jdbc:postgresql://postgres-auth:5432/clients_db
      DB_USERNAME_AUTH: postgres
      DB_PASSWORD_AUTH: 3Mu9o82cGm0CoejxSEE0INVZhHmWibCS

    command: sh -c "/wait && java -jar /app/auth_ms.jar"

  postgres-product:
    container_name: postgres-product
    image: postgres:16.3-alpine3.20

    environment:
      POSTGRES_DB: products_db
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "3Mu9o82cGm0CoejxSEE0INVZhHmWibCS"
      PGDATA: "/data/postgres"
      PGPORT: 5433

    volumes:
      - postgres2_data:/var/lib/postgresql/data

    ports:
      - "5433:5433"
    restart: unless-stopped

    networks:
      - app-network

  product-ms:
    image: "product-ms:0.0.1"
    build:
      context: apps/msproduct
    container_name: product_ms

    ports:
      - "8002:8002"

    networks:
      - app-network

    environment:
      WAIT_HOSTS: postgres-product:5433
      DB_URI_AUTH: jdbc:postgresql://postgres-product:5433/products_db
      DB_USERNAME_AUTH: postgres
      DB_PASSWORD_AUTH: 3Mu9o82cGm0CoejxSEE0INVZhHmWibCS

    command: sh -c "/wait && java -jar /app/app.jar"

  postgres-cart:
    container_name: postgres-cart
    image: postgres:16.3-alpine3.20

    environment:
      POSTGRES_DB: cart_db
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "3Mu9o82cGm0CoejxSEE0INVZhHmWibCS"
      PGDATA: "/data/postgres"
      PGPORT: 5434

    volumes:
      - postgres3_data:/var/lib/postgresql/data

    ports:
      - "5434:5434"
    restart: unless-stopped

    networks:
      - app-network

  cart-ms:
    image: "cart-ms:0.0.1"
    build:
      context: apps/mscart/
    container_name: cart_ms

    ports:
      - "8003:8003"

    networks:
      - app-network
    environment:
      WAIT_HOSTS: postgres-cart:5434
      DB_URI_AUTH: jdbc:postgresql://postgres-cart:5434/cart_db
      DB_USERNAME_AUTH: postgres
      DB_PASSWORD_AUTH: 3Mu9o82cGm0CoejxSEE0INVZhHmWibCS

    command: sh -c "/wait && java -jar /app/app.jar"

  postgres-payment:
    container_name: postgres-payment
    image: postgres:16.3-alpine3.20

    environment:
      POSTGRES_DB: payment_db
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "3Mu9o82cGm0CoejxSEE0INVZhHmWibCS"
      PGDATA: "/data/postgres"
      PGPORT: 5435

    volumes:
      - postgres4_data:/var/lib/postgresql/data

    ports:
      - "5435:5435"
    restart: unless-stopped

    networks:
      - app-network

  payment-ms:
    image: "payment-ms:0.0.1"
    build:
      context: apps/mspayment
    container_name: payment_ms

    ports:
      - "8004:8004"

    networks:
      - app-network

    environment:
      WAIT_HOSTS: postgres-payment:5435
      DB_URI_AUTH: jdbc:postgresql://postgres-payment:5435/payment_db
      DB_USERNAME_AUTH: postgres
      DB_PASSWORD_AUTH: 3Mu9o82cGm0CoejxSEE0INVZhHmWibCS

    command: sh -c "/wait && java -jar /app/app.jar"

volumes:
  postgres1_data:
  postgres2_data:
  postgres3_data:
  postgres4_data:

networks:
  app-network:
    driver: bridge
